export enum StellarErrorCategory {
  NETWORK = 'network',
  VALIDATION = 'validation',
  AUTHORIZATION = 'authorization',
  ACCOUNT = 'account',
  TRANSACTION = 'transaction',
  ASSET = 'asset',
  OPERATION = 'operation',
  SYSTEM = 'system',
  KEYPAIR = 'keypair'
}

export interface StellarErrorInfo {
  code: string;
  category: StellarErrorCategory;
  userMessage: string;
  technicalMessage: string;
  suggestions: string[];
  severity: 'low' | 'medium' | 'high' | 'critical';
  retryable: boolean;
}

export interface StellarErrorContext {
  operation?: string;
  account?: string;
  asset?: string;
  amount?: string;
  networkUrl?: string;
  timestamp?: number;
  additionalInfo?: Record<string, unknown>;
}

export interface ProcessedStellarError {
  errorInfo: StellarErrorInfo;
  context: StellarErrorContext;
  originalError: Error;
  correlationId: string;
}

export const STELLAR_ERROR_CODES = {
  // Network Errors
  NETWORK_ERROR: 'STELLAR_NETWORK_ERROR',
  CONNECTION_TIMEOUT: 'STELLAR_CONNECTION_TIMEOUT',
  REQUEST_FAILED: 'STELLAR_REQUEST_FAILED',
  SERVER_ERROR: 'STELLAR_SERVER_ERROR',
  RATE_LIMITED: 'STELLAR_RATE_LIMITED',
  
  // Validation Errors
  INVALID_SECRET_KEY: 'STELLAR_INVALID_SECRET_KEY',
  INVALID_PUBLIC_KEY: 'STELLAR_INVALID_PUBLIC_KEY',
  INVALID_SIGNATURE: 'STELLAR_INVALID_SIGNATURE',
  INVALID_MESSAGE_FORMAT: 'STELLAR_INVALID_MESSAGE_FORMAT',
  MISSING_REQUIRED_FIELD: 'STELLAR_MISSING_REQUIRED_FIELD',
  INVALID_AMOUNT: 'STELLAR_INVALID_AMOUNT',
  INVALID_ASSET_CODE: 'STELLAR_INVALID_ASSET_CODE',
  INVALID_MEMO: 'STELLAR_INVALID_MEMO',
  
  // Authorization Errors
  UNAUTHORIZED_OPERATION: 'STELLAR_UNAUTHORIZED_OPERATION',
  INSUFFICIENT_PERMISSIONS: 'STELLAR_INSUFFICIENT_PERMISSIONS',
  SIGNATURE_VERIFICATION_FAILED: 'STELLAR_SIGNATURE_VERIFICATION_FAILED',
  
  // Account Errors
  ACCOUNT_NOT_FOUND: 'STELLAR_ACCOUNT_NOT_FOUND',
  ACCOUNT_NOT_FUNDED: 'STELLAR_ACCOUNT_NOT_FUNDED',
  INSUFFICIENT_BALANCE: 'STELLAR_INSUFFICIENT_BALANCE',
  ACCOUNT_MERGE_IMMATURE: 'STELLAR_ACCOUNT_MERGE_IMMATURE',
  
  // Transaction Errors
  TRANSACTION_FAILED: 'STELLAR_TRANSACTION_FAILED',
  TRANSACTION_TOO_EARLY: 'STELLAR_TRANSACTION_TOO_EARLY',
  TRANSACTION_TOO_LATE: 'STELLAR_TRANSACTION_TOO_LATE',
  TRANSACTION_MALFORMED: 'STELLAR_TRANSACTION_MALFORMED',
  BAD_SEQUENCE_NUMBER: 'STELLAR_BAD_SEQUENCE_NUMBER',
  INSUFFICIENT_FEE: 'STELLAR_INSUFFICIENT_FEE',
  
  // Asset Errors
  ASSET_NOT_FOUND: 'STELLAR_ASSET_NOT_FOUND',
  ASSET_NOT_AUTHORIZED: 'STELLAR_ASSET_NOT_AUTHORIZED',
  TRUSTLINE_NOT_FOUND: 'STELLAR_TRUSTLINE_NOT_FOUND',
  
  // Operation Errors
  OPERATION_UNDERFUNDED: 'STELLAR_OPERATION_UNDERFUNDED',
  OPERATION_NOT_SUPPORTED: 'STELLAR_OPERATION_NOT_SUPPORTED',
  OPERATION_LINE_FULL: 'STELLAR_OPERATION_LINE_FULL',
  OPERATION_NO_TRUST: 'STELLAR_OPERATION_NO_TRUST',
  
  // System Errors
  INTERNAL_ERROR: 'STELLAR_INTERNAL_ERROR',
  TIMEOUT: 'STELLAR_TIMEOUT',
  UNKNOWN_ERROR: 'STELLAR_UNKNOWN_ERROR',
  
  // Keypair Errors
  KEYPAIR_GENERATION_FAILED: 'STELLAR_KEYPAIR_GENERATION_FAILED',
  PRIVATE_KEY_ENCRYPTION_FAILED: 'STELLAR_PRIVATE_KEY_ENCRYPTION_FAILED',
  PRIVATE_KEY_DECRYPTION_FAILED: 'STELLAR_PRIVATE_KEY_DECRYPTION_FAILED',
} as const;

export type StellarErrorCode = typeof STELLAR_ERROR_CODES[keyof typeof STELLAR_ERROR_CODES];